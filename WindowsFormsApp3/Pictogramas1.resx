<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picquerer.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAPBQTFRF////
        9+fg7R8kAAAAj4+P+urj8B8k/Pb09+ff+ezn/Ozl/Pz8k5OT9PT09eXe+fn53Nzc5OTkrKysJiYmUFBQ
        wsLC7Ozsy8vL0tLSEhIS8PDwcXFxhoaG2NjYNDQ0SkpKrKGc69zV2cvFnZ2dLCwsurq6eHh4X19fqKio
        5R4jOzs7uhgcZWVlloyIGxsb5tfR1cfBc2xpuKynxrq0RAgKqBUZihIVXAwNdQ8RREA+Kygni4J+s6ei
        UQoMJwQFlRMW0xsgwxkdGAAAaGFefXVxNgQGghEUnxUYDAAAaw4QPAgJHwMELQUGbg4QXw0OzBsfUodM
        zwAAEBhJREFUeF7tnflb2swWx6WH4b437BCECLKvEcKmrSxWW+jy2t72//9v7jmTqOyQScCJj98f3gXR
        Jx/m7DMJZ/DWdQZqyP92FVKRMHT2lhVCQr/1329T/ndCORWNhsPhaND6v53yHmE0lmr6c/VsNlvPVRLp
        c+vlrfIYYTjtV/OGlQVQmqG3KzHrh5vlJcJwJlflXJ+/Xd+RHn9/5f+vJuJR6z3r8g5hOFWnxfv86fuP
        q78PD61W6+Hhy8397TVRjkJbF9IzhJdZWr+7+y+tD4FFtR6uvn/GnxQqF9Y7V+QRwnAF+X7++dJCpg/L
        whceflwTY9p687K8QZhpAPz692odzxSu5A0xhjYFVi8QBmu4gNc3rc14XIHAw0e01eyl9SsL8gBhsJkE
        uH3Ysn5PCrSuHtFS1xHlJ4xWNPj148NuPlLg4Q9ANWP92rPkJwxhhrjaz4cKtL5/BX013khPmAD4dhgg
        IX7E9L9iqLITpvLw+8oC2K/Ah1uARtj6XVOSE8YK8PXmwBUkBT78D6Bu/bIpuQnDWYB7G4AUbj4B1Kxf
        55KbEJ3w7oAouqjA1W9QF4tUqQkv8vD5rz1AFEab0EKrITWhH+CHbcDAhzswFlKGzISXOnx6sE2Idorl
        m/UnUBITBivw0/4SkrC2efFEiQnjKlzvqra3KnD1E3LWH5GasCbihaRA6w/knxspeQmjmAuFlhARf4D2
        nBPlJYyP4ZMY4IfAl2+QexqmykuYEjVS00zVuPV35CXMiWR7S4GPkHxKifISqnAn6IZIiCkxYf0daQnD
        SbhtWRdsW4GHr8+Vm7SEMQ3uresV0TeoW22itIRpLGisqxVQ4A4aVkaUlrBmr/VdUeAPFGQnTBw6f9qo
        wP9At9LFWyW8hfw74Wvr7Vupw0jzr/yRJg3ghNAD2cJRxg+0PJDxo2MnVdtfD1Rtb7/yxitz1D1V5e+e
        HHXAn7zQAZ9X3/oUI1qHnwLzYFLg3hOTKJom2tt3ehLtP+nPp2skJhSfCN/8XGCSmFB8qv8JNE9M9c9i
        OtwJ7swsbAPLTHhWQU+0LvtwBVqPUF04rSA1YViHX19sL+K9h3ZIKZzaLd34LvdTtifJTRiuA3y0RRh4
        uPPUSYWzeMPeUJHqtRUeyQnP0nn4fGNd/n4FWrcAbU+dGOKu+PvQZj/Q+g7LR01Q0hNSyvh1s+fopSlc
        wZ+grx5OlJ/wLJHEcLM/ogYCD9cAo7UT7R4gDCbyAP9+2XuC9uYRoOHFE7QoDDfwuO8U9O0vLNbWVtAj
        hGeXDYCvn3adZP/xDQAqy1HUlDcI0VJ1JLi+ekAaC8sS3XLx9/4zgNZYOwDN5RFCbDRyaKpw/fHqge65
        eFHr7w3ZJ6gJb99RgoqmcxhU4dfd7f3NF/OuoL9XNx//PP7EVwuVxVJ0Sd4hRMaYn2wVXfLzt8fH68fH
        37+IDiNo7fkE1Lq8RIgKZirtQlXjXCQjr9YTW5ePy2OEqGg8naiEcih/qFnL7Fg9U94j5ApGUQfdJOtV
        Qht6J/S+3gm9r3dC7+ud0Pt6J/S+PEEYztSalcTlYXXoqmQnDIYzoQZ1vgCamrJetCWpCYPxlL9g0o35
        v5rbH2GyVfISRmM1v0q9rlaYFwdzaOSqkBRYRVkJY822zp+0M+oMuxFWmjXOozUDslvGTTskI2H0PMEX
        D5JqpxdRGPOxIb8rtA75DSPfPZKP8DzF54Zkm4in+EhsYNAwprK0QX+gZCOMJ9pknPp8WkY8xvmQcEge
        GGxDYffUaZNOQhhM5bL1bRPbRcX9BTLPQhFd74mOxLpq4fwsoT0fi7WhUxBGc+RUkKztTtnhdJ3elp/0
        2PPiPUkpjzS03bXNwQN0CsIYZmxD18BI7EA8T2Vx+TS1U7Z8b0GMdQcz/hlZb7ajUxCm0e70QdGA/NYl
        ODfdbzbosjU+Rel2ZvTThrQ1TQpAHXWVIkB98yJeNLn7zYalJe/jIr4R/hDaKfu5kHQiQpj7mNIH2BDs
        0f0ILz/fYJ4+FumRecLIj0E0fHFhP9CcilDvMp8y1KBivfSki0yzTQSY2tfN06eUhnM0T01txvGDqGRV
        tZ7YO8Vf1SkIEwBFvHzWLUDDeokrXgtlaTNJmxW7PvaPhfUipdynrqJdi58Fa1mzwYC23armFIQF0Hq0
        QKU+5J+bg3AqaxaexmST+1EAHZD/NdJombEsvXVcoH+2ba7iCQj9AJMIXXNkAoZ5eeh7nG5cmA9KG9wP
        pXQnuLpZir5hNAIYz4c+n5HFlFmx1wkfn7CWBLXM1+iJMJbgvpfvF4eYHDYsHy6gjyKMQUcPcLERtT+k
        d87qsZHdRTw64WUBjIFJEZlDNXoWC1FqQN/rlXyb8XABI0W00AIm+GCaHLBaLNFCK0X9PAe6PU88NuF5
        A6BjcmBxCap54MCY97Dw3IKHeaXcxw8hiwmC88GsjItKPxgamZzdDurIhEG0sL7lZ8rQgKRZmXU3+x6J
        +UrDCb4rn0BvxY8Hxv3h07tZV6/ocllptIKprmten8Lm5H2UGrYZJ65epFekCk2rp7GPQtBkfxh5+TRK
        M1xSqSJNIgmjoWlgWHzhBfPKcwffYM4rtEazxkdQGGC4A1piJQw/S0ecD9BRCVNVSPIow5QShQ4oDJb7
        vkVhA1Ec0Yeg5xJ+nvnG/R6+av0YxTChgmG3/D4mYQaDyhSXgJof4lOLCwa3IixAJzQx1NuhppneyZoX
        3858Q1xW3XZ/cUTCOF7QhJF9Fql61jvb7dPHeh2Ksaq/4qfoAioWOsveyiJFrPDa9lvg4xGeYxidY8FS
        KtLgzJigxVkXuybGyIY1NZdrU51q9AcrUwyMUyWqwXP2xzTHI7zA+qrfVUq8uUvOrYy2WVgK0Jt0yiUw
        6uB7V97MWE9F8qb1t23pWIQ0m8E8oQzomie9rfmBxEMklzbqDyLKWpvBSkX00cbqs1cP07EIMRHqZYXq
        GFqTrQHGFOvN9HF1NJvQCHH9s0ALxcXVnm5dtqkjESY0qA45Vxkvml/nLrFSudcrlzanEsVs8223TZaO
        Q4j9xNgqt7fHzyVhlbr5nViEY5QtpHOgSWSlqTwY08PI9oj5ypjltWQ9mgYQGrUdhTCDIb9oXaIjYZNB
        obhaLCZz9aVHdtrQEQh5po84X0JMpTzVNIY+bqlPj/KwKfcJ41iUOAdkVMbRtyHkpxiplDL20SIDb5Tr
        hOeY6eclZ4AKi5QH1ARDAVtJxO1iNA3Za5qe5TZhkGd6J4C8R5zzLqNQ5KUQ82G0Wbnn7nC5TZjArgAz
        vbCojp3lCQ9m0y4v9RjrbLpj61C5TFhDxzEzvYjI+ajABi0/o0kHNwUWmeBq2t/7fZK7hGkdMz2/WAEx
        VjKdb9QvvlRvrDTRtn39yEFylTCGDUCHD39FVJryPTT1ZfsexajveH5Sp4jcJAy2MYwK5wnafcOkN1ga
        8WPRjYBixYwlFwmDmCdm4omQ9fLjlR029g8NLla/zsGm3CMMNvFizPG9mCKD4XKbhWEVc77tzaYVuUeI
        5XbenByKarm5UHxDTINQF6vVXuQaYQxLSKthckFMUcpz7OuTTdFE/yy3CMPoMB0HmX5RmBbLUxq5GXWB
        ydOqXCKM+gH6DqtRS4qvO5jTaDGZ3XMA5zC5RJgwnEWZJ2FROpyolBZBC4mdvViVO4TY846dRRkuGh6r
        1n49ln9NN5bQHcIMOiGN7x2JttVopmbKoO9xXD25ISQ3CGlqMbeuU1jUU3DrJGn9aQ8bCmvX35lcIExh
        npg7aglR5ravpeqgpEQoGQqOSJfkmDBID+aYOA6jfHOKy5gVu4wpAyObdCFCOCek6b1W5J2qA7EiLmBD
        1fOF+dTsC5WOhhWbo5LbkkPCOFbb+eKBU9+tovNgRqfU7fW65vEMFuFr6sYSOiSkJ3KMho5XsFwArUOH
        M6yPivk6VLFtfJCHbTkixGLbjURPNro4f+RzC6DTiG7IAWEY2yWtv3iSQFRYxyzEYkaDfF1wOrouccLz
        nAbJjlu16IuUoYqW4WRusSxhwlgbPWXqwvB+WYoyxPqh4bDrXZQoYRpdcMTPVLomCjSRHhVuAvccbJcY
        YbhpoAtah52cCxM880W65WEHDRSqFYE71LZLiJBcUHPJBbGhwIZ3OO3MZzqv29opVwGFCOPogpo7LsgU
        pTudzEZjqyit1gVP5G+XfcJgCkNBwRUXpCm31VBoybxab2bcdEBLtgnDFbykuRsuSOMKbCxB0xv1Si0T
        d6XfXZddwnOqtF1wQRpXdOiwVDV7PDgum4RUiI6nTgtRXL/IoE87vJC7PIJhLskWIe8FZ85dkEWm/Pxa
        wa3ac5fsEF6E0ELnjgtRFuHDbL1ecztsbpQNwhj2gmPnLqh0O7iA1VDG3bS3VYcTprHeyA+cZkGF8fjZ
        EHxAgoAOJYxiqwQzp0kCDZTqMrqR4mQ6kDCOSSI5ceiCzNfj9xmEThBfXnQYYQaTRN5hnWYd4dLqmZMZ
        KNdBhClMXXrPIV+JzmmDmjp2/lvVAYS8jHGUJBjzdflJ9ZM6oKX9hJdZjO1FB0kCl6/Hj+DRraCn115C
        mtnrDgaGZJ59sk99+0NUj6o9hNEK1Wnix7joZiDKf5B/Jb59hHG00GTngIPam4XuN6HtQD1bO1EBs0E7
        CdP48ecHohbKGE8PUKicroDZoB2EUXrC9Ez4HJ51wrfwKuFlQdsJL3JYf4jvCzJen1UPeaLJcbWV8BIt
        tDoV31UqGmSfr863lTBaQwtVxU+KKlMDNL+Lk2txbSYM+zEEzsV3lZThGDSRR48dQRsJ6bi9VhQvtNkw
        j4CvGUAXtIHwyUKFY4xvgIA270c+ntYJwyFnFsoidCudu3sPTrRGSLd+goNpjFKm3aPFL816Za0QBlOY
        JPSBeJJgQ0zz1V0PhDq1lgn5yL7voND2YZaArLNjyy5riZDOjjgZ2aMLGmD4JUjzC1ogDNJjKKqOpjHF
        JAbRU48p9miB8KJNraA4H/PRYbtXmFPs1qKVpkZO5oUsgoBV6QCXCP9TdmChCKi5eArGPS0ROvBAn69j
        wFhCQLcImW+CJirw3Mbjyx1C7oN5N85Kui9XCE0flBPQpTUkH5QU0A1CfhdrUkofJDknxFJNWh8kOSek
        WjQvY5qw5JiQUbEtMaBjQrq3VZPXRFFOCQcYZNy47+N4ckg4qCKgRA39BjkiVIZVeaaG2+SEUBkY7tya
        dFQ5IGQ02HblBrqjSpxQGY5Ak2hquE3ChEpvBOCXbCazSaKESk9HQMmDDJcgIT3WCOrymyhKjFApz1x4
        2sFpJETIn9uU9QagEKEJKNdke7sECPnDbgUfnvYKsk/IShMAVYot+oNkm9BrgLYJzSdveQjQLiHffdn+
        dTEyyi5hUYOq1C39mmwS0tTJW4D2CGnq5OzRYq8gO4TKMCn8vOLX0xKhz/fPDtFJJ7tfTCCBlgj/u1vl
        gjwnnQ7XIuFexRKe6JeWZYvQk3on9L6IMGT999tUCAnVkP/tKqQi4dsWwP8BJBCobQzP0yEAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>